API Documentation: Book Collection Management System
Base URL:
https://api.bookcollection.com/v1



1. Authentication
POST /auth/login
Description:
‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö token (‡πÄ‡∏ä‡πà‡∏ô JWT) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á endpoint ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ authentication
Request Body:
{
  "email": "user@example.com",
  "password": "strongpassword123"
}


Responses:
| Status Code | Description | Example Response | 
| 200 OK | Authentication successful; ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞ token | json { "user_id": 12, "username": "user123", "email": "user@example.com", "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }  | 
| 400 Bad Request | Request body ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ú‡∏¥‡∏î | json { "error": "Email and password are required" }  | 
| 401 Unauthorized | ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (email/password ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á) | json { "error": "Invalid email or password" }  | 



2. Users
GET /users/{user_id}
Description:
‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏° user_id
Path Parameter:
- user_id: ‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
Responses:
| Status Code | Description | Example Response | 
| 200 OK | ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à | json { "user_id": 12, "username": "user123", "email": "user@example.com", "profile": { "first_name": "Atchariya", "last_name": "Thongyu", "bio": "Developer & Book Lover", "avatar_url": "https://example.com/avatar.jpg" } }  | 
| 404 Not Found | ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ user_id ‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß | json { "error": "User not found" }  | 



PATCH /users/{user_id}
Description:
‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
Path Parameter:
- user_id
Request Body:
{
  "first_name": "Atchariya",
  "bio": "Love database optimization!"
}


Responses:
| Status Code | Description | Example Response | 
| 200 OK | ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à | json { "message": "Profile updated successfully" }  | 
| 400 Bad Request | ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô | json { "error": "Invalid profile data" }  | 
| 404 Not Found | ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ user_id‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß | json { "error": "User not found" }  | 



3. Books
GET /books
Description:
‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
Responses:
| Status Code | Description | Example Response | 
| 200 OK | ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à | json [ { "book_id": 1, "title": "The Hobbit", "isbn": "978-0-618-00221-3", "publisher": "HarperCollins", "published_year": 1937, "cover_url": "https://example.com/the_hobbit.jpg" }, { "book_id": 2, "title": "Sapiens: A Brief History of Humankind", "isbn": "978-0-06-231609-7", "publisher": "Harper", "published_year": 2014, "cover_url": "https://example.com/sapiens.jpg" } ]  | 



GET /books/{book_id}
Description:
‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏° book_id
Path Parameter:
- book_id
Responses:
| Status Code | Description | Example Response | 
| 200 OK | ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à | json { "book_id": 1, "title": "The Hobbit", "description": "‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÅ‡∏ü‡∏ô‡∏ï‡∏≤‡∏ã‡∏µ‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Å‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏Æ‡∏≠‡∏ö‡∏ö‡∏¥‡∏ó...", "isbn": "978-0-618-00221-3", "publisher": "HarperCollins", "published_year": 1937, "cover_url": "https://example.com/the_hobbit.jpg", "authors": ["J.R.R. Tolkien"], "categories": ["‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢", "‡πÅ‡∏ü‡∏ô‡∏ï‡∏≤‡∏ã‡∏µ"] }  | 
| 404 Not Found | ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ book_id‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß | json { "error": "Book not found" }  | 



POST /books
Description:
‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
Request Body:
{
  "title": "Harry Potter and the Philosopher's Stone",
  "description": "‡∏†‡∏≤‡∏Ñ‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏ã‡∏µ‡∏£‡∏µ‡∏™‡πå‡πÅ‡∏Æ‡∏£‡πå‡∏£‡∏µ‡πà ‡∏û‡∏≠‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡πå...",
  "isbn": "978-0-7475-3269-9",
  "publisher": "Bloomsbury",
  "published_year": 1997,
  "cover_url": "https://example.com/harry_potter_1.jpg"
}


Responses:
| Status Code | Description | Example Response | 
| 201 Created | ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à | json { "book_id": 5, "message": "Book added successfully" }  | 
| 400 Bad Request | ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô | json { "error": "Invalid book data" }  | 



4. User Books (Saved Books)
GET /users/{user_id}/saved-books
Description:
‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ (saved books)
Path Parameter:
- user_id
Responses:
| Status Code | Description | Example Response | 
| 200 OK | ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à | json [ { "book_id": 1, "title": "The Hobbit", "status": "reading" }, { "book_id": 2, "title": "Sapiens: A Brief History of Humankind", "status": "want_to_read" } ]  | 
| 404 Not Found | ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ user_id‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß | json { "error": "User not found" }  | 



POST /users/{user_id}/saved-books
Description:
‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏•‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
Path Parameter:
- user_id
Request Body:
{
  "book_id": 1,
  "status": "reading"
}


Responses:
| Status Code | Description | Example Response | 
| 201 Created | ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à | json { "message": "Book added to your list" }  | 
| 400 Bad Request | ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á | json { "error": "Invalid data" }  | 
| 404 Not Found | ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ ID ‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß | json { "error": "User or Book not found" }  | 



5. Reviews
GET /books/{book_id}/reviews
Description:
‡∏î‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô (reviews) ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
Path Parameter:
- book_id
Responses:
| Status Code | Description | Example Response | 
| 200 OK | ‡∏î‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à | json [ { "review_id": 101, "user": "Atchariya", "rating": 5, "comment": "‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î‡πÅ‡∏ü‡∏ô‡∏ï‡∏≤‡∏ã‡∏µ ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏•‡∏á!" }, { "review_id": 102, "user": "John Doe", "rating": 4, "comment": "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏µ‡∏°‡∏≤‡∏Å" } ]  | 
| 404 Not Found | ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ book_id‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß | json { "error": "Book not found" }  | 



POST /books/{book_id}/reviews
Description:
‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠
Path Parameter:
- book_id
Request Body:
{
  "rating": 5,
  "comment": "‡∏ä‡∏≠‡∏ö‡∏°‡∏≤‡∏Å‡πÜ ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡πà‡∏°‡πÇ‡∏õ‡∏£‡∏î‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô!"
}


Responses:
| Status Code | Description | Example Response | 
| 201 Created | ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ | json { "message": "Review submitted successfully" }  | 
| 400 Bad Request | ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô | json { "error": "Invalid review data" }  | 
| 404 Not Found | ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ book_id‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß | json { "error": "Book not found" }  | 


Additional Notes:
- Authentication:
‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö endpoint ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå (‡πÄ‡∏ä‡πà‡∏ô POST, PATCH, ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° saved-book, reviews) ‡∏Ñ‡∏ß‡∏£‡∏™‡πà‡∏á header ‡πÅ‡∏ö‡∏ö:
Authorization: Bearer <token>
- Content-Type:
‡∏ó‡∏∏‡∏Å request ‡∏ó‡∏µ‡πà‡∏°‡∏µ body ‡∏Ñ‡∏ß‡∏£‡∏™‡πà‡∏á header:
Content-Type: application/json
- Error Handling:
‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏≤‡∏Å server ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ key ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ä‡πà‡∏ô error ‡∏´‡∏£‡∏∑‡∏≠ message ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ client ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
- Response Codes:
- 200 OK: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
- 201 Created: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö
- 400 Bad Request: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
- 401 Unauthorized: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
- 404 Not Found: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö resource ‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠


Authors API Documentation-----------------------------------------------------
üîó Base URL:
http://localhost:4000/authors



1Ô∏è‚É£ Get Author by ID
üè∑Ô∏è Method: GET
üîó Endpoint:
/authors/:authorId


üìå Description:
‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á Author ‡∏ï‡∏≤‡∏° authorId
üîç Path Parameter:
| Name | Type | Required | Description | 
| authorId | integer | ‚úÖ Yes | ID ‡∏Ç‡∏≠‡∏á Author ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ | 


üîª Request Example
GET /authors/5


üî∫ Response Example (Success: 200)
{
    "success": true,
    "data": {
        "author_id": 5,
        "name": "John Doe",
        "bio": "An experienced writer specialized in mystery novels."
    }
}


‚ö† Error Responses
| Status Code | Message | Description | 
| 404 | Author not found | ‡πÑ‡∏°‡πà‡∏û‡∏ö Author ‡∏ï‡∏≤‡∏° ID ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏ | 
| 400 | ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• authorId ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á | ID ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 | 
| 500 | Internal server error. Please try again later | ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö | 



2Ô∏è‚É£ Search & Paginate Authors
üè∑Ô∏è Method: GET
üîó Endpoint:
/authors


üìå Description:
‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ Author ‡πÇ‡∏î‡∏¢‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Pagination
üîç Query Parameters:
| Name | Type | Required | Default | Description | 
| search | string | ‚ùå No | - | ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ö‡∏ö Partial Match ‡πÉ‡∏ô name ‡πÅ‡∏•‡∏∞ bio | 
| name | string | ‚ùå No | - | ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô name | 
| page | integer | ‚ùå No | 1 | ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• | 
| limit | integer | ‚ùå No | 10 | ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ | 


üîª Request Example
GET /authors?search=John&page=2&limit=5


üî∫ Response Example (Success: 200)
{
    "success": true,
    "count": 42,
    "data": [
        {
            "author_id": 10,
            "name": "John Brown",
            "bio": "A novelist focusing on historical fiction."
        },
        {
            "author_id": 11,
            "name": "Johnny Silver",
            "bio": "Writes sci-fi books with a twist of reality."
        }
    ]
}

Ó∑õÓ∑ú
‚úÖ count: 42 ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á Author ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
‚ö† Error Responses
| Status Code | Message | Description | 
| 400 | ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• page ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á | page ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 | 
| 400 | ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• limit ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á | limit ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 | 
| 500 | Internal server error. Please try again later | ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö | 



üìå Notes
- ‡πÉ‡∏ä‡πâ search ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏≤‡∏Å‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ Author ‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠ ‡πÅ‡∏•‡∏∞ bio
- ‡πÉ‡∏ä‡πâ name ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏≤‡∏Å‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏∑‡πà‡∏≠ Author
- page ‡πÅ‡∏•‡∏∞ limit ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Pagination ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏à‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤)


3Ô∏è‚É£ Create Author
Method: POST
Endpoint: /authors
Description: ‡πÄ‡∏û‡∏¥‡πà‡∏° Author ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
üì• Request Body
{
  "name": "string",    // required, ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á
  "bio": "string"      // optional, ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏¢‡πà‡∏≠
}


| Field | Type | Required | Description | 
| name | string | ‚úÖ Yes | ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á | 
| bio | string | ‚ùå No | ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏¢‡πà‡∏≠ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) | 


üî∫ Success Response (201 Created)
{
  "success": true,
  "data": {
    "author_id": 12,
    "name": "Jane Austen",
    "bio": "English novelist known for ..."
  }
}


‚ö†Ô∏è Error Responses
| Status | Body | When | 
| 400 | { "success": false, "message": "‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô required" } | ‡∏ñ‡πâ‡∏≤ name ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏°‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á | 
| 400 | { "success": false, "message": "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" } | ‡∏ñ‡πâ‡∏≤ name ‡∏´‡∏£‡∏∑‡∏≠ bio ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà string | 
| 500 | { "success": false, "message": "Internal server error. Please try again later" } | ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö | 



4Ô∏è‚É£ Update Author
Method: PATCH
Endpoint: /authors/:authorId
Middleware: validateId("authorId")
Description: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Author (‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏¢‡πà‡∏≠)
üîç Path Parameter
| Name | Type | Required | Description | 
| authorId | integer | ‚úÖ Yes | ID ‡∏Ç‡∏≠‡∏á Author ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç | 


üì• Request Body
{
  "name": "string",    // optional, ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
  "bio": "string"      // optional, ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏¢‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà
}


‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á field ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÉ‡∏ô body

üî∫ Success Response (200 OK)
{
  "success": true,
  "data": {
    "author_id": 12,
    "name": "Jane A.",
    "bio": "Updated bio...",
    "createdAt": "2023-08-01T10:20:30.000Z"
  }
}


‚ö†Ô∏è Error Responses
| Status | Body | When | 
| 400 | { "success": false, "message": "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• authorId ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" } | ‡πÄ‡∏°‡∏∑‡πà‡∏≠ authorId ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡∏´‡∏£‡∏∑‡∏≠ ‚â§ 0 | 
| 400 | { "success": false, "message": "‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á field ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏ô‡∏∂‡πà‡∏á field" } | ‡πÄ‡∏°‡∏∑‡πà‡∏≠ body ‡πÑ‡∏°‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ name ‡∏´‡∏£‡∏∑‡∏≠ bio | 
| 400 | { "success": false, "message": "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" } | ‡πÄ‡∏°‡∏∑‡πà‡∏≠ name ‡∏´‡∏£‡∏∑‡∏≠ bio ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà string | 
| 404 | { "success": false, "message": "Author not found" } | ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö Author ‡∏ï‡∏≤‡∏° authorId | 
| 500 | { "success": false, "message": "Internal server error. Please try again later" } | ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö | 



5Ô∏è‚É£ Delete Author
Method: DELETE
Endpoint: /authors/:authorId
Middleware: validateId("authorId")
Description: ‡∏•‡∏ö Author ‡∏ï‡∏≤‡∏° authorId
üîç Path Parameter
| Name | Type | Required | Description | 
| authorId | integer | ‚úÖ Yes | ID ‡∏Ç‡∏≠‡∏á Author ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö | 


üî∫ Success Response (200 OK)
{
  "success": true,
  "message": "Author deleted successfully"
}


‚ö†Ô∏è Error Responses
| Status | Body | When | 
| 400 | { "success": false, "message": "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• authorId ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" } | ‡πÄ‡∏°‡∏∑‡πà‡∏≠ authorId ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡∏´‡∏£‡∏∑‡∏≠ ‚â§ 0 | 
| 404 | { "success": false, "message": "Author not found" } | ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö Author ‡∏ï‡∏≤‡∏° authorId | 
| 500 | { "success": false, "message": "Internal server error. Please try again later" } | ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö | 



Note:
- ‡πÉ‡∏ä‡πâ validateId("authorId") middleware ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å endpoint ‡∏ó‡∏µ‡πà‡∏°‡∏µ path parameter :authorId ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô integer ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0
- ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ body ‡∏Ç‡∏≠‡∏á POST/PATCH ‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Content-Type: application/json ‡πÉ‡∏ô header ‡∏Ç‡∏≠‡∏á request
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error log ‡πÉ‡∏ô console ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢ debug ‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Å‡∏¥‡∏î 500 Internal Server Error




Categories API Documentation------------------------------------------------------------------------

üîó Base URL:
http://localhost:4000/categories

1Ô∏è‚É£ List Categories
üè∑Ô∏è Method: GET
üîó Endpoint:
/categories


üìå Description:
‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Category ‡πÅ‡∏ö‡∏ö offset-based pagination ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö search ‡πÅ‡∏•‡∏∞ filter by parent
üîç Query Parameters:
| Name       | Type     | Required | Description                                          | |------------|----------|:--------:|------------------------------------------------------| | page       | integer  |    ‚ùå     | ‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà 1)                             | | limit      | integer  |    ‚ùå     | ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ (default: 20)                    | | search     | string   |    ‚ùå     | ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠ category (partial, case-insensitive)     | | parentId   | integer  |    ‚ùå     | ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏•‡∏π‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏Ç‡∏≠‡∏á parent_category_id ‡∏ô‡∏µ‡πâ          |
üîª Request Example
GET /categories?page=2&limit=10&search=fic&parentId=5


üî∫ Response Example (Success: 200)
{
  "success": true,
  "data": {
    "items": [
      {
        "category_id": 12,
        "name": "Dystopia",
        "description": "‡πÇ‡∏•‡∏Å‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏ó‡∏µ‡πà‡∏°‡∏∑‡∏î‡∏°‡∏ô",
        "parent_category_id": 5,
        "parent_category": {
          "category_id": 5,
          "name": "Science Fiction"
        },
        "subcategories": [
          { "category_id": 18, "name": "Post-Apocalyptic" }
        ]
      }
      // ‚Ä¶ ‡∏Ñ‡∏∑‡∏ô items ‡∏ï‡∏≤‡∏° limit ‚Ä¶
    ],
    "total": 37,
    "page": 2,
    "limit": 10,
    "totalPages": 4
  }
}

Ó∑õÓ∑ú
‚ö† Error Responses
| Status Code | Message                                          | Description                          | |-------------|--------------------------------------------------|--------------------------------------| | 400         | ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö query params ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á                  | ‡πÄ‡∏ä‡πá‡∏Ñ page/limit/parentId ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç  | | 500         | Internal server error. Please try again later    | ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö                 |

2Ô∏è‚É£ Get Category by ID
üè∑Ô∏è Method: GET
üîó Endpoint:
/categories/:categoryId


üìå Description:
‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î Category ‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏° parent & subcategories
üîç Path Parameter:
| Name         | Type     | Required | Description                         | |--------------|----------|:--------:|-------------------------------------| | categoryId   | integer  |    ‚úÖ    | ID ‡∏Ç‡∏≠‡∏á Category ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• |
üîª Request Example
GET /categories/5


üî∫ Response Example (Success: 200)
{
  "success": true,
  "data": {
    "category_id": 5,
    "name": "Science Fiction",
    "description": "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï",
    "parent_category_id": null,
    "parent_category": null,
    "subcategories": [
      { "category_id": 12, "name": "Dystopia" },
      { "category_id": 13, "name": "Space Opera" }
    ]
  }
}


‚ö† Error Responses
| Status Code | Message                                          | Description                        | |-------------|--------------------------------------------------|------------------------------------| | 400         | ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• categoryId ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á              | categoryId ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç > 0     | | 404         | Category not found                               | ‡πÑ‡∏°‡πà‡∏û‡∏ö Category ‡∏ï‡∏≤‡∏° ID ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏      | | 500         | Internal server error. Please try again later    | ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö               |

3Ô∏è‚É£ Create Category
üè∑Ô∏è Method: POST
üîó Endpoint:
/categories


üìå Description:
‡∏™‡∏£‡πâ‡∏≤‡∏á Category ‡πÉ‡∏´‡∏°‡πà
üìÑ Request Body (application/json):
| Name                 | Type     | Required | Description                               | |----------------------|----------|:--------:|-------------------------------------------| | name                 | string   |    ‚úÖ    | ‡∏ä‡∏∑‡πà‡∏≠ Category (max 50 chars, unique)      | | description          | string   |    ‚ùå    | ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î                               | | parent_category_id   | integer  |    ‚ùå    | ID ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å (null = top-level)        |
üîª Request Example
POST /categories
Content-Type: application/json

{
  "name": "Mystery",
  "description": "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö ‡πÉ‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏≥",
  "parent_category_id": 2
}


üî∫ Response Example (Success: 201)
{
  "success": true,
  "data": {
    "category_id": 20,
    "name": "Mystery",
    "description": "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö ‡πÉ‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏≥",
    "parent_category_id": 2,
    "parent_category": { "category_id": 2, "name": "Fiction" },
    "subcategories": []
  }
}


‚ö† Error Responses
| Status Code | Message                                          | Description                         | |-------------|--------------------------------------------------|-------------------------------------| | 400         | Missing or invalid fields                        | name ‡∏´‡πâ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏á, parent_category_id ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠ null | | 409         | Category name already exists                     | name ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏≠‡∏∑‡πà‡∏ô         | | 500         | Internal server error. Please try again later    | ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö                |

4Ô∏è‚É£ Update Category
üè∑Ô∏è Method: PUT
üîó Endpoint:
/categories/:categoryId


üìå Description:
‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Category (‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏ó‡∏∏‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï)
üîç Path Parameter:
| Name         | Type     | Required | Description                         | |--------------|----------|:--------:|-------------------------------------| | categoryId   | integer  |    ‚úÖ    | ID ‡∏Ç‡∏≠‡∏á Category ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï         |
üìÑ Request Body (application/json):
| Name                 | Type     | Required | Description                               | |----------------------|----------|:--------:|-------------------------------------------| | name                 | string   |    ‚úÖ    | ‡∏ä‡∏∑‡πà‡∏≠ Category (max 50 chars, unique)      | | description          | string   |    ‚ùå    | ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î                               | | parent_category_id   | integer  |    ‚ùå    | ID ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å (null = top-level)        |
üîª Request Example
PUT /categories/5
Content-Type: application/json

{
  "name": "Sci-Fi",
  "description": "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏•",
  "parent_category_id": null
}


üî∫ Response Example (Success: 200)
{
  "success": true,
  "data": {
    "category_id": 5,
    "name": "Sci-Fi",
    "description": "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏•",
    "parent_category_id": null,
    "parent_category": null,
    "subcategories": [ /* ‚Ä¶ */ ]
  }
}


‚ö† Error Responses
| Status Code | Message                                          | Description                        | |-------------|--------------------------------------------------|------------------------------------| | 400         | ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á                          | categoryId ‡∏´‡∏£‡∏∑‡∏≠ body ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î      | | 404         | Category not found                               | ‡πÑ‡∏°‡πà‡∏û‡∏ö Category ‡∏ï‡∏≤‡∏° ID ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏     | | 409         | Category name already exists                     | name ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏≠‡∏∑‡πà‡∏ô                | | 500         | Internal server error. Please try again later    | ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö              |

5Ô∏è‚É£ Delete Category
üè∑Ô∏è Method: DELETE
üîó Endpoint:
/categories/:categoryId


üìå Description:
‡∏•‡∏ö Category ‡∏ï‡∏≤‡∏° ID (cascade ‡∏•‡∏ö‡πÉ‡∏ô book_categories ‡∏ï‡∏≤‡∏° schema)
üîç Path Parameter:
| Name         | Type     | Required | Description                         | |--------------|----------|:--------:|-------------------------------------| | categoryId   | integer  |    ‚úÖ    | ID ‡∏Ç‡∏≠‡∏á Category ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö             |
üîª Request Example
DELETE /categories/5


üî∫ Response Example (Success: 200)
{
  "success": true,
  "message": "Delete category successfully",
  "data": {
    "category_id": 5,
    "name": "Sci-Fi",
    "description": "‚Ä¶",
    "parent_category_id": null
  }
}


‚ö† Error Responses
| Status Code | Message                                          | Description                        | |-------------|--------------------------------------------------|------------------------------------| | 400         | ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• categoryId ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á              | categoryId ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç > 0     | | 404         | Category not found                               | ‡πÑ‡∏°‡πà‡∏û‡∏ö Category ‡∏ï‡∏≤‡∏° ID ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏     | | 409         | Cannot delete category: related records exist    | ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î | | 500         | Internal server error. Please try again later    | ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö              |



======================================================review======================================
Reviews API Documentation
‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:
‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö Authentication (‡πÄ‡∏ä‡πà‡∏ô JWT) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö endpoint ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Create, Update, Delete) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ
‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Error Response ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ:
{
  "success": false,
  "message": "Description of error"
}




Data Model: Review
Review Object Properties:
| Field | Type | Description | 
| review_id | Integer | ‡∏£‡∏´‡∏±‡∏™‡∏£‡∏µ‡∏ß‡∏¥‡∏ß (Primary Key, auto-generated) | 
| book_id | Integer | ‡∏£‡∏´‡∏±‡∏™‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ (Foreign Key ‡πÑ‡∏õ‡∏¢‡∏±‡∏á books.book_id) | 
| user_id | Integer | ‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏£‡∏µ‡∏ß‡∏¥‡∏ß (Foreign Key ‡πÑ‡∏õ‡∏¢‡∏±‡∏á users.user_id) | 
| rating | Integer | ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ (‡πÄ‡∏ä‡πà‡∏ô 1-5) | 
| comment | String (Optional) | ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° | 
| created_at | DateTime | ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á (auto-generated) | 


Relation:
- ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ú‡πà‡∏≤‡∏ô books
- ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ú‡πà‡∏≤‡∏ô users

Endpoints
1. Create a New Review
- URL: /reviews
- Method: POST
- Description: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
- Authentication: Required
Request Body (JSON):
{
  "book_id": 123,
  "user_id": 456,
  "rating": 4,
  "comment": "Great book! Highly recommended."
}


- Field Details:
- book_id (number, required): ‡∏£‡∏´‡∏±‡∏™‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
- user_id (number, required): ‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
- rating (number, required): ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß (‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡πÄ‡∏ä‡πà‡∏ô 1-5)
- comment (string, optional): ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
Success Response:
- Status: 201 Created
- Content:
{
  "success": true,
  "message": "Review created successfully",
  "data": {
    "review_id": 1,
    "book_id": 123,
    "user_id": 456,
    "rating": 4,
    "comment": "Great book! Highly recommended.",
    "created_at": "2025-06-04T08:00:00.000Z"
  }
}


Error Responses:
- 400 Bad Request: ‡∏ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

2. Retrieve a Single Review
- URL: /reviews/{reviewId}
- Method: GET
- Description: ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≤‡∏° reviewId
- Authentication: (‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡∏ñ‡πâ‡∏≤ endpoint ‡∏ô‡∏µ‡πâ Public)
Path Parameter:
| Parameter | Type | Description | 
| reviewId | integer | ‡∏£‡∏´‡∏±‡∏™‡∏Ç‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π | 


Success Response:
- Status: 200 OK
- Content:
{
  "success": true,
  "data": {
    "review_id": 1,
    "book_id": 123,
    "user_id": 456,
    "rating": 4,
    "comment": "Great book! Highly recommended.",
    "created_at": "2025-06-04T08:00:00.000Z"
  }
}


Error Responses:
- 404 Not Found: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö reviewId
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

3. Update an Existing Review
- URL: /reviews/{reviewId}
- Method: PUT
- Description: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç rating ‡πÅ‡∏•‡∏∞ comment ‡πÑ‡∏î‡πâ)
- Authentication: Required
Path Parameter:
| Parameter | Type | Description | 
| reviewId | integer | ‡∏£‡∏´‡∏±‡∏™‡∏Ç‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï | 


Request Body (JSON):
{
  "rating": 5,
  "comment": "After reconsideration, it's a 5 stars!"
}


- Field Details:
- rating (number, required): ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÉ‡∏´‡∏°‡πà
- comment (string, optional): ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
Success Response:
- Status: 200 OK
- Content:
{
  "success": true,
  "message": "Review updated successfully",
  "data": {
    "review_id": 1,
    "book_id": 123,
    "user_id": 456,
    "rating": 5,
    "comment": "After reconsideration, it's a 5 stars!",
    "created_at": "2025-06-04T08:00:00.000Z"
  }
}


Error Responses:
- 400 Bad Request: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
- 404 Not Found: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

4. Delete a Review
- URL: /reviews/{reviewId}
- Method: DELETE
- Description: ‡∏•‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ï‡∏≤‡∏° reviewId
- Authentication: Required
Path Parameter:
| Parameter | Type | Description | 
| reviewId | integer | ‡∏£‡∏´‡∏±‡∏™‡∏Ç‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö | 


Success Response:
- Status: 200 OK (‡∏´‡∏£‡∏∑‡∏≠ 204 No Content ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö)
- Content (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ 200 OK):
{
  "success": true,
  "message": "Review deleted successfully",
  "data": {
    "review_id": 1,
    "book_id": 123,
    "user_id": 456,
    "rating": 4,
    "comment": "Great book! Highly recommended.",
    "created_at": "2025-06-04T08:00:00.000Z"
  }
}


Error Responses:
- 404 Not Found: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ reviewId ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

5. List Reviews
- URL: /reviews
- Method: GET
- Description: ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏° book_id ‡∏´‡∏£‡∏∑‡∏≠ user_id ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (pagination)
- Authentication: (‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö public/private ‡∏Ç‡∏≠‡∏á API)
Query Parameters:
| Parameter | Type | Required | Description | 
| book_id | integer | No | ‡∏Å‡∏£‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ï‡∏≤‡∏°‡∏£‡∏´‡∏±‡∏™‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ | 
| user_id | integer | No | ‡∏Å‡∏£‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ï‡∏≤‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ | 
| page | integer | No | ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (default: 1) | 
| limit | integer | No | ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ (default: 10, ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: 100) | 


Success Response:
- Status: 200 OK
- Content:
{
  "success": true,
  "data": [
    {
      "review_id": 1,
      "book_id": 123,
      "user_id": 456,
      "rating": 4,
      "comment": "Great book! Highly recommended.",
      "created_at": "2025-06-04T08:00:00.000Z"
    },
    {
      "review_id": 2,
      "book_id": 124,
      "user_id": 457,
      "rating": 3,
      "comment": "It was decent.",
      "created_at": "2025-06-04T10:00:00.000Z"
    }
  ],
  "meta": {
    "page": 1,
    "limit": 10,
    "total": 25,
    "totalPages": 3
  }
}

Ó∑õÓ∑ú
Error Responses:
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

Additional Considerations
- Validation:
‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ rating ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î (‡πÄ‡∏ä‡πà‡∏ô 1-5) ‡πÅ‡∏•‡∏∞ field ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏°‡∏µ‡∏Å‡∏≤‡∏£ validate ‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö API ‡∏´‡∏£‡∏∑‡∏≠‡∏î‡πâ‡∏ß‡∏¢‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ (Zod/Joi)
- Relations & Data Integrity:
‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Review ‡∏Å‡∏±‡∏ö Books ‡πÅ‡∏•‡∏∞ Users ‡∏Ñ‡∏ß‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á FK constraints ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (Prisma ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢ enforce ‡∏ú‡πà‡∏≤‡∏ô schema ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏ß‡πâ)
- Pagination & Sorting:
‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö endpoint List Reviews ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á (sorting) ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï


=========================== user ================================================
Users API Documentation
‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:
- ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö Authentication (‡πÄ‡∏ä‡πà‡∏ô JWT) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
- ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ (password_hash) ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏•‡∏∞‡πÉ‡∏ô API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô password ‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏Æ‡∏ä‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
- ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Error Response ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (‡πÉ‡∏ä‡πâ status code ‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°):
{
  "success": false,
  "message": "Description of error"
}




Data Model: User
User Object Properties:
| Field | Type | Description | 
| user_id | Integer | ‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (Primary Key, auto-generated) | 
| username | String | ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥) | 
| email | String | ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥) | 
| password_hash | String | ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Æ‡∏ä‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏ô response) | 
| created_at | DateTime | ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ (auto-generated) | 
| updated_at | DateTime | ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (auto-generated) | 


Relations (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÜ):
- user_profile ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (first_name, last_name, bio, avatar_url)
- reviews ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÇ‡∏û‡∏™‡∏ï‡πå
- custom_collections ‡∏Ñ‡∏≠‡∏•‡πÄ‡∏•‡∏Å‡∏ä‡∏±‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
- user_books ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏ô‡∏Ñ‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÄ‡∏ä‡πà‡∏ô want_to_read, reading, read)

Endpoints
1. Register a New User
- URL: /users
- Method: POST
- Description: ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà ‡πÇ‡∏î‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• username, email ‡πÅ‡∏•‡∏∞ password
- Authentication: ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô (endpoint ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô)
Request Body (JSON):
{
  "username": "john_doe",
  "email": "john@example.com",
  "password": "Secret123!"
}


- Field Details:
- username (string, required): ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° (‡πÄ‡∏ä‡πà‡∏ô 3‚Äì50 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)
- email (string, required): ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
- password (string, required): ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏≠‡∏≤‡∏à‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡πÄ‡∏ä‡πà‡∏ô 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£) (‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á password_hash)
Success Response:
- Status: 201 Created
- Content:
{
  "success": true,
  "message": "User registered successfully",
  "data": {
    "user_id": 1,
    "username": "john_doe",
    "email": "john@example.com",
    "created_at": "2025-06-04T08:00:00.000Z",
    "updated_at": "2025-06-04T08:00:00.000Z"
  }
}


Error Responses:
- 400 Bad Request: ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
- 409 Conflict: ‡∏ñ‡πâ‡∏≤ username ‡∏´‡∏£‡∏∑‡∏≠ email ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

2. Retrieve User Details
- URL: /users/{userId}
- Method: GET
- Description: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
- Authentication: ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
Path Parameter:
| Parameter | Type | Description | 
| userId | integer | ‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (user_id) ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• | 


Success Response:
- Status: 200 OK
- Content:
{
  "success": true,
  "data": {
    "user_id": 1,
    "username": "john_doe",
    "email": "john@example.com",
    "created_at": "2025-06-04T08:00:00.000Z",
    "updated_at": "2025-06-04T08:00:00.000Z"
  }
}


Error Responses:
- 404 Not Found: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

3. Update User Details
- URL: /users/{userId}
- Method: PUT
- Description: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç username, email, ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ)
- Authentication: Required (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
Path Parameter:
| Parameter | Type | Description | 
| userId | integer | ‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç | 


Request Body (JSON):
{
  "username": "john_doe_updated",
  "email": "john_new@example.com"
}


- Field Details:
- username (string, optional): ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà (‡∏ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô)
- email (string, optional): ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡∏°‡πà (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥)
- (‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô ‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° field ‡πÄ‡∏ä‡πà‡∏ô password ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô backend ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏Æ‡∏ä‡πÉ‡∏´‡∏°‡πà‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï)
Success Response:
- Status: 200 OK
- Content:
{
  "success": true,
  "message": "User updated successfully",
  "data": {
    "user_id": 1,
    "username": "john_doe_updated",
    "email": "john_new@example.com",
    "created_at": "2025-06-04T08:00:00.000Z",
    "updated_at": "2025-06-05T10:00:00.000Z"
  }
}


Error Responses:
- 400 Bad Request: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
- 404 Not Found: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
- 409 Conflict: ‡∏ñ‡πâ‡∏≤ username ‡∏´‡∏£‡∏∑‡∏≠ email ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

4. Delete a User Account
- URL: /users/{userId}
- Method: DELETE
- Description: ‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
- Authentication: Required (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
Path Parameter:
| Parameter | Type | Description | 
| userId | integer | ‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö | 


Success Response:
- Status: 200 OK (‡∏´‡∏£‡∏∑‡∏≠ 204 No Content ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ)
- Content (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ 200 OK):
{
  "success": true,
  "message": "User deleted successfully",
  "data": {
    "user_id": 1,
    "username": "john_doe_updated",
    "email": "john_new@example.com"
  }
}


Error Responses:
- 404 Not Found: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

5. List Users
- URL: /users
- Method: GET
- Description: ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÇ‡∏î‡∏¢‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤ (pagination)
- Authentication: ‡∏≠‡∏≤‡∏à‡∏à‡∏∞ require admin ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö public endpoint ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö
Query Parameters:
| Parameter | Type | Required | Description | 
| page | integer | No | ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (default: 1) | 
| limit | integer | No | ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ (default: 10, max: 100) | 
| search | string | No | ‡∏Å‡∏£‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å username ‡∏´‡∏£‡∏∑‡∏≠ email | 


Success Response:
- Status: 200 OK
- Content:
{
  "success": true,
  "data": [
    {
      "user_id": 1,
      "username": "john_doe",
      "email": "john@example.com",
      "created_at": "2025-06-04T08:00:00.000Z"
    },
    {
      "user_id": 2,
      "username": "jane_doe",
      "email": "jane@example.com",
      "created_at": "2025-06-04T09:00:00.000Z"
    }
  ],
  "meta": {
    "page": 1,
    "limit": 10,
    "total": 50,
    "totalPages": 5
  }
}

Ó∑õÓ∑ú
Error Responses:
- 500 Internal Server Error: ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö

Additional Considerations
- Security:
- ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏±‡∏î‡∏Å‡∏∏‡∏° (‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÅ‡∏Æ‡∏ä)
- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÉ‡∏ô response (‡πÄ‡∏ä‡πà‡∏ô ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á password_hash)
- ‡πÉ‡∏ä‡πâ middleware ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Access Token ‡∏´‡∏£‡∏∑‡∏≠ JWT ‡πÉ‡∏ô endpoint ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
- Validation:
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á email, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á username ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á password ‡∏î‡πâ‡∏ß‡∏¢ library ‡πÄ‡∏ä‡πà‡∏ô Joi ‡∏´‡∏£‡∏∑‡∏≠ Zod
- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö input parameters ‡∏ó‡∏±‡πâ‡∏á‡πÉ‡∏ô query ‡πÅ‡∏•‡∏∞ body ‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏° schema ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
- Pagination & Filtering:
- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (sorting) ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï


